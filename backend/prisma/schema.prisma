// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String   @id @default(cuid())
  email           String?
  emailVerified   Boolean?
  password        String?
  robloxId        String?
  robloxCookie    String?
  robloxCreatedAt DateTime?
  googleId        String?
  googleEmail     String?
  discordId       String?
  username        String?
  avatar          String?
  rank            String   @default("user")
  balance         Float    @default(0)
  xp              Float    @default(0)
  vaultAmount     Float    @default(0)
  vaultExpireAt   DateTime?
  statsBet        Float    @default(0)
  statsWon        Float    @default(0)
  statsDeposit    Float    @default(0)
  statsWithdraw   Float    @default(0)
  slotsMascot     Boolean  @default(false)
  leaderboardPoints Float  @default(0)
  limitsBetToWithdraw Float @default(0)
  limitsBetToRain   Float    @default(0)
  limitsBlockAffiliate Boolean @default(false)
  limitsBlockRain   Boolean  @default(false)
  limitsBlockTip    Boolean  @default(false)
  limitsLimitTip    Float    @default(0)
  limitsBlockSponsor Boolean @default(false)
  limitsBlockLeaderboard Boolean @default(false)
  rakebackEarned    Float    @default(0)
  rakebackAvailable Float    @default(0)
  affiliatesCode    String?
  affiliatesReferred Int      @default(0)
  affiliatesBet     Float    @default(0)
  affiliatesDeposit Float    @default(0)
  affiliatesEarned  Float    @default(0)
  affiliatesAvailable Float  @default(0)
  affiliatesGenerated Float  @default(0)
  referrerId        String?
  referrer          User?    @relation("UserReferrals", fields: [referrerId], references: [id])
  referredAddress   String?
  referredAt        DateTime?
  redeemedCode      String?
  fairClientSeed    String?
  anonymous         Boolean  @default(false)
  proxy             String?
  ips               Json[]
  muteExpire        DateTime?
  muteReason        String?
  banExpire         DateTime?
  banReason         String?
  verifiedAt        DateTime?
  updatedAt         DateTime @updatedAt
  createdAt         DateTime @default(now())

  referrals BalanceTransaction[]
  BalanceTransaction BalanceTransaction[] @relation("UserBalanceTransactions")
}

model BalanceTransaction {
  id        String   @id @default(cuid())
  amount    Float
  type      String
  userId    String
  user      User     @relation("UserBalanceTransactions", fields: [userId], references: [id])
  state     String
  createdAt DateTime @default(now())
}
